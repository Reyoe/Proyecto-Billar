<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKCgAAAEAIABoGgAAFgAAACgAAAAoAAAAUAAAAAEAIAAAAAAAABkAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wICAP8EBAH/BgUI/wgIEP8HBw7/BgUG/wQEAf8BAQD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AgIB/wYFBf8HCir/Bhds/wUl
        nP8FLK7/BSqr/wUgk/8GFF//Bggg/wUEAv8BAQD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AwMB/wgJGv8GHnj/BT+3/wRGoP8EPX//BDRx/wQyb/8ENHr/BDiY/wUy
        pv8HGmT/BwcR/wMCAf8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AwIA/wcL
        Lv8GMKL/BUOT/wYpXP8HGVr/BxVc/wYTV/8IGW//CyKS/wcaX/8GJFv/BTyG/wYyif8IDCD/BQUD/wEB
        Af8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AwMB/wcLLf8FOK7/BTp1/wcYU/8GD0T/Awcc/wEC
        CP8BAQH/Awgf/wcVW/8DBxv/BQ08/wcXU/8FOGv/BT+Q/wcLIP8HBwX/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wYGDv8GMpj/BT56/wcXWP8FDjv/BAkk/wUNMv8FDjj/BQ8//wURR/8FDz//Awcd/wEC
        B/8DBx7/BxNP/wU9bv8EO43/BQUP/wYGBf8CAgL/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wMCAP8HGU3/BFCa/wcc
        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
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8DAwP/CwsL/wsKCv8KCgf/CAkP/wcIHf8DCyn/ACZP/wNv
        u/8FfvL/BUDv/wY77f8GMtT/BTPE/wYizf8FFpj/Awo4/wIDBf8JChD/CwsK/wsLCf8LCwr/BwcH/wMD
        A/8EBAT/BAQE/woKCv8EBAT/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wEBAf8FBQX/BQUF/wEBAf8BAQD/BQUD/wYEAf8CBx//BT+x/wY99P8GFp7/Bwol/wcI
        Ff8EBx3/Bgw3/wMGIP8ICQ//CAgI/wcHB/8GBgb/AgIC/wAAAP8AAAD/AAAA/wAAAP8HBwf/BwcH/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8EBAT/CQgG/woQLv8GKr3/BhiW/wcHCf8DAgH/CAcG/wwMCv8GBgb/BQUG/wIC
        A/8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/BQUF/woKCv8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wYG
        Bv8ODgz/CQ0s/wUUff8FCi7/BwcF/wQEBP8KCgr/CQkJ/wYGB/8CAgL/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wICAv8EBAT/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8BAQH/BwcH/wwMC/8LCw3/CQkO/wcH
        B/8CAgL/CgoK/wsLC/8HBwf/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wEBAf8GBgb/CQkJ/wUFBf8AAAD/AgIC/w4ODv8KCgr/BAQE/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wEBAf8KCgr/CAgI/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AwMD/wEBAf8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA=
</value>
  </data>
</root>