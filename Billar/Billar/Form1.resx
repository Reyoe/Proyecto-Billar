<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>